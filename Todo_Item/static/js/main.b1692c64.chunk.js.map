{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","searchText","searchStyle","fontSize","onSearchChange","event","target","value","setState","props","type","style","this","placeholder","autoComplete","onChange","Component","ItemStatusFilter","buttons","name","label","filter","onFilterChange","map","clazz","key","onClick","TodoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","TodoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","App","isLoggedIn","welcomeBox","loginBox","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","checkItem","idMath","addItem","text","Math","random","result","newItem","toggleProperty","checkArray","property","array","a","length","propName","oldItem","items","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","Date","toString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1692c64.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport \"./app-header.css\";\r\n\r\nconst AppHeader = ({toDo, done}) =>\r\n{\r\n    return(\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from \"./search-panel\";\r\n\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\n\r\nimport \"./search-panel.css\";\r\n\r\nexport default class SearchPanel extends Component\r\n{\r\n    state =\r\n    {\r\n        term: ''\r\n    }\r\n\r\n    searchText = 'Type here to search';\r\n    searchStyle = {\r\n        fontSize: '16px'\r\n    };\r\n\r\n    onSearchChange = (event) =>\r\n    {\r\n        const term = event.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <input type=\"text\" className=\"search-input\" style={ this.searchStyle }\r\n                   placeholder={ this.searchText } autoComplete=\"Hello\"\r\n                   value={ this.state.term }\r\n                   onChange={ this.onSearchChange }/>\r\n        );\r\n    }\r\n}","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport \"./item-status-filter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component\r\n{\r\n    buttons =\r\n    [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'active', label: 'Active' },\r\n        { name: 'done', label: 'Done' }\r\n    ]\r\n\r\n    render()\r\n    {\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({ name, label }) =>\r\n        {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n            return(\r\n                <button type=\"button\" className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={ () => onFilterChange(name) }>\r\n                        {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        );\r\n    }\r\n}","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport \"./todo-list-item.css\";\r\n\r\nexport default class TodoListItem extends Component\r\n{\r\n\r\n    render()\r\n    {\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n\r\n        let classNames = 'todo-list-item';\r\n\r\n        if (done)\r\n        {\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important)\r\n        {\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n            <span className={ classNames }>\r\n                <span className=\"todo-list-item-label\"\r\n                      onClick={ onToggleDone }>\r\n                    { label }\r\n                </span>\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\r\n                        onClick={ onToggleImportant }>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={ onDeleted }>\r\n                    <i className=\"fa fa-trash-o\" />\r\n                </button>\r\n            </span>\r\n        );\r\n    }\r\n}","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport \"./todo-list.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                      onToggleImportant, onToggleDone }) =>\r\n{\r\n    const elements = todos.map((item) =>\r\n    {\r\n        const { id, ...itemProps } = item;\r\n        let classNames = \"list-group-item\";\r\n\r\n        return(\r\n            <li key={ id } className={classNames}>\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted={ () => onDeleted(id) }\r\n                    onToggleDone={ () => onToggleDone(id) }\r\n                    onToggleImportant={ () => onToggleImportant(id) }/>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport \"./item-add-form.css\";\r\n\r\nexport default class ItemPropsForm extends Component\r\n{\r\n    state =\r\n    {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (event) =>\r\n    {\r\n        this.setState(\r\n        {\r\n            label: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (event) =>\r\n    {\r\n        event.preventDefault();\r\n        if (this.state.label !== '')\r\n        {\r\n            this.props.onAdded(this.state.label);\r\n        }\r\n        this.setState(\r\n        {\r\n            label: ''\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <form className=\"block-button item-add-form d-flex\"\r\n                  onSubmit={ this.onSubmit } >\r\n                <input type=\"text\" className=\"form-control\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\"\r\n                        value={this.state.label} />\r\n                <button className=\"add-button\">Add item</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component\r\n{\r\n    isLoggedIn = true;\r\n    welcomeBox = \"Welcome Back\";\r\n    loginBox = \"Login, please.\";\r\n\r\n    state =\r\n    {\r\n        todoData:\r\n        [\r\n            this.createTodoItem('Drink coffee', 'nb'),\r\n            this.createTodoItem('Make Awesome App', 'nm'),\r\n            this.createTodoItem('Have a lunch', 'nh')\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    deleteItem = (id) =>\r\n    {\r\n        this.setState(({ todoData }) =>\r\n        {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx + 1)\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    checkItem = (idMath) =>\r\n    {\r\n        this.state.todoData.map((item) =>\r\n        {\r\n            const { id } = item;\r\n            if (idMath === id)\r\n            {\r\n                return false;\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    createTodoItem(label, idMath)\r\n    {\r\n        return {\r\n            label: label,\r\n            important: false,\r\n            done: false,\r\n            id: idMath\r\n        }\r\n    }\r\n\r\n    addItem = (text) =>\r\n    {\r\n        let idMath = `${Math.random()}n`;\r\n        let result = this.checkItem(idMath);\r\n\r\n        if (result === false)\r\n        {\r\n            idMath = `${Math.random()}n`;\r\n            result = this.checkItem(idMath);\r\n        }\r\n        else\r\n        {\r\n            const newItem = this.createTodoItem(text, idMath);\r\n\r\n            this.setState(( { todoData } ) =>\r\n            {\r\n                const newArray = [...todoData, newItem];\r\n\r\n                return {\r\n                    todoData: newArray\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleProperty(array, id, propName)\r\n    {\r\n            const idx = array.findIndex((el) => el.id === id);\r\n\r\n            const oldItem = array[idx];\r\n\r\n            const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n            return [\r\n                ...array.slice(0, idx),\r\n                newItem,\r\n                ...array.slice(idx + 1)\r\n            ];\r\n    }\r\n\r\n    onToggleDone = (id) =>\r\n    {\r\n        this.setState(( { todoData } ) =>\r\n        {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant = (id) =>\r\n    {\r\n        this.setState(( { todoData } ) =>\r\n        {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        });\r\n    }\r\n\r\n    checkArray = (property, array) =>\r\n    {\r\n        for (let a = 0; a < array.length; a++)\r\n        {\r\n            if (array[a] === property)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    onSearchChange = (term) =>\r\n    {\r\n        this.setState({ term });\r\n    }\r\n\r\n    onFilterChange = (filter) =>\r\n    {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    search(items, term)\r\n    {\r\n        if (term.length === 0)\r\n        {\r\n            return items;\r\n        }\r\n        return items.filter((items) =>\r\n        {\r\n            return items.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, value)\r\n    {\r\n        if (value === 'all')\r\n        {\r\n            return items;\r\n        }\r\n        else if (value === 'active')\r\n        {\r\n            return items.filter((item) => !item.done);\r\n        }\r\n        else if (value === 'done')\r\n        {\r\n            return items.filter((item) => item.done);\r\n        }\r\n        else\r\n        {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { todoData, term, filter } = this.state;\r\n        const visibleItems = this.filter(this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return(\r\n            <div className=\"todo-app\">\r\n                <p>{ new Date().toString() }</p>\r\n                { this.isLoggedIn ? this.welcomeBox : this.loginBox }\r\n                <AppHeader toDo={ todoCount } done={ doneCount } />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={ this.onSearchChange } />\r\n                    <ItemStatusFilter\r\n                        filter={filter}\r\n                        onFilterChange={ this.onFilterChange } />\r\n                </div>\r\n                <TodoList\r\n                    todos={ visibleItems }\r\n                    onDeleted={  this.deleteItem }\r\n                    onToggleImportant={ this.onToggleImportant }\r\n                    onToggleDone={ this.onToggleDone }/>\r\n                <ItemAddForm\r\n                    onAdded={ this.addItem }/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}